name: shared workflow

on:
  workflow_call:
    inputs:
      cluster:
        required: true
        default: staging
        type: string
      environment:
        required: true
        type: string
      subscription_id:
        required: true
        type: string
      ref:
        default: master
        required: true
        type: string

jobs:
  build:
    environment: build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.variables.outputs.tag }}

    steps:
      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v4
        with:
           ref: ${{ inputs.ref }}

      - name: Set variables
        id: variables
        run: |
          echo "tag=latest" >> $GITHUB_OUTPUT
          if [[ "${{ inputs.environment }}" == "production" ]]; then
            echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci --no-audit

      - name: Build
        run: npm run build
        env:
          ALGOLIA_ADMIN_KEY: ${{ inputs.environment == 'production' && secrets.ALGOLIA_ADMIN_KEY || '' }}
          ALGOLIA_APP_ID: ${{ inputs.environment == 'production' && secrets.ALGOLIA_APP_ID || '' }}
          ENVIRONMENT: ${{ inputs.environment }}
          # NODE_OPTIONS: --max-old-space-size=6144

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to DockerHub
        id: docker_push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ci/Dockerfile
          labels: commitid=${{ github.sha }}
          push: true
          tags: devolutions/docs:${{ steps.variables.outputs.tag }}

      - name: Image digest = ${{ steps.docker_push.outputs.digest }}
        run: echo ${{ steps.docker_push.outputs.digest }}

  deploy:
    environment: ${{ inputs.environment }}
    needs: ["build"]
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ inputs.environment }}
      cancel-in-progress: true
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Check out Devolutions/k8s-as-code
        uses: actions/checkout@v4
        with:
          repository: Devolutions/k8s-as-code
          token: ${{ secrets.DEVOLUTIONSBOT_WRITE_TOKEN }}

      - name: Check out Devolutions/actions
        uses: actions/checkout@v4
        with:
          path: ./.github/workflows
          repository: Devolutions/actions
          ref: v1
          token: ${{ secrets.DEVOLUTIONSBOT_TOKEN }}

      - name: Install toolbox
        uses: ./.github/workflows/toolbox-install
        with:
          github_token: ${{ secrets.DEVOLUTIONSBOT_TOKEN }}

      - name: Connect to Tailscale
        uses: ./.github/workflows/tailscale
        with:
          auth_key: ${{ secrets.TAILSCALE_AUTH_KEY_EPHEMERAL }}

      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ inputs.subscription_id }}

      - name: Authenticate to cluster
        uses: ./.github/workflows/k8s-authenticate
        with:
          cluster: ${{ inputs.cluster }}
          subscription_id: ${{ inputs.subscription_id }}

      - name: Deploy with kustomize
        uses: ./.github/workflows/k8s-kustomize-deploy
        with:
          cluster: ${{ inputs.cluster }}
          environment: ${{ inputs.environment }}
          image: devolutions/docs:${{needs.build.outputs.tag}}
          namespace: docs
